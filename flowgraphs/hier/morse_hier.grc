options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: hb
    hier_block_src_path: '.:'
    id: morse_hier
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Morse Code Generator
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: morse_samp_rate
  id: variable
  parameters:
    comment: Samples per Second
    value: 50e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 12.0]
    rotation: 0
    state: true
- name: morse_sps
  id: variable
  parameters:
    comment: Samples per Symbol
    value: int(60 * morse_samp_rate / morse_dpw / morse_wpm)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 12.0]
    rotation: 0
    state: true
- name: sym_rate
  id: variable
  parameters:
    comment: ''
    value: morse_samp_rate/morse_sps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [952, 12.0]
    rotation: 0
    state: enabled
- name: blocks_float_to_complex_0_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 424.0]
    rotation: 0
    state: true
- name: blocks_repeat_0_0_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: int(rf_samp_rate/morse_samp_rate)
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [952, 436.0]
    rotation: 0
    state: true
- name: blocks_repeat_0_1
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: morse_sps
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [552, 220.0]
    rotation: 0
    state: enabled
- name: blocks_uchar_to_float_0_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 224.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nMorse code vector source\n\"\"\"\n\n#  epy_block_0.py\n\
      #  revised 09/10/2019 - finish code table\n#  revised 09/11/2019 - test for\
      \ bad character\n#  revised 09/27/2019 - get input from a Message Edit block\
      \ (code from Volker Schroer dl1ksv)\n\nimport numpy as np\nfrom gnuradio import\
      \ gr\n\nimport pmt\n\nclass mc_sync_block(gr.sync_block):\n    \"\"\"\n    reads\
      \ input from a message port\n    generates a vector of Morse code bits\n   \
      \ \"\"\"\n\n    Morse = {\n      # codes from https://www.itu.int/rec/R-REC-M.1677-1-200910-I/en\n\
      \        \"A\": [1,0,1,1,1],\n        \"B\": [1,1,1,0,1,0,1,0,1],\n        \"\
      C\": [1,1,1,0,1,0,1,1,1,0,1],\n        \"D\": [1,1,1,0,1,0,1],\n        \"E\"\
      : [1],\n        \"F\": [1,0,1,0,1,1,1,0,1],\n        \"G\": [1,1,1,0,1,1,1,0,1],\n\
      \        \"H\": [1,0,1,0,1,0,1],\n        \"I\": [1,0,1],\n        \"J\": [1,0,1,1,1,0,1,1,1,0,1,1,1],\n\
      \        \"K\": [1,1,1,0,1,0,1,1,1],\n        \"L\": [1,0,1,1,1,0,1,0,1],\n\
      \        \"M\": [1,1,1,0,1,1,1],\n        \"N\": [1,1,1,0,1],\n        \"O\"\
      : [1,1,1,0,1,1,1,0,1,1,1],\n        \"P\": [1,0,1,1,1,0,1,1,1,0,1],\n      \
      \  \"Q\": [1,1,1,0,1,1,1,0,1,0,1,1,1],\n        \"R\": [1,0,1,1,1,0,1],\n  \
      \      \"S\": [1,0,1,0,1],\n        \"T\": [1,1,1],\n        \"U\": [1,0,1,0,1,1,1],\n\
      \        \"V\": [1,0,1,0,1,0,1,1,1],\n        \"W\": [1,0,1,1,1,0,1,1,1],\n\
      \        \"X\": [1,1,1,0,1,0,1,0,1,1,1],\n        \"Y\": [1,1,1,0,1,0,1,1,1,0,1,1,1],\n\
      \        \"Z\": [1,1,1,0,1,1,1,0,1,0,1],\n        \" \": [0],              \
      \     # space\n        \"ls\": [0,0,0],              # letter space\n      \
      \  \"ws\": [0,0,0,0],            # word space\n        \"1\": [1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1],\n\
      \        \"2\": [1,0,1,0,1,1,1,0,1,1,1,0,1,1,1],\n        \"3\": [1,0,1,0,1,0,1,1,1,0,1,1,1],\n\
      \        \"4\": [1,0,1,0,1,0,1,0,1,1,1],\n        \"5\": [1,0,1,0,1,0,1,0,1],\n\
      \        \"6\": [1,1,1,0,1,0,1,0,1,0,1],\n        \"7\": [1,1,1,0,1,1,1,0,1,0,1,0,1],\n\
      \        \"8\": [1,1,1,0,1,1,1,0,1,1,1,0,1,0,1],\n        \"9\": [1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1],\n\
      \        \"0\": [1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1],\n        \".\": [1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1],\
      \          # period\n        \",\": [1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1],\
      \      # comma\n        \":\": [1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1],        \
      \  # colon\n        \"?\": [1,0,1,0,1,1,1,0,1,1,1,0,1,0,1],              # question\n\
      \        \"'\": [1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1],      # apostrophe\n\
      \        \"-\": [1,1,1,0,1,0,1,0,1,0,1,0,1,1,1],              # dash or minus\n\
      \        \"/\": [1,1,1,0,1,0,1,0,1,1,1,0,1],                  # slash\n    \
      \    \"(\": [1,1,1,0,1,0,1,1,1,0,1,1,1,0,1],              # left parenthesis\n\
      \        \")\": [1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1],      # right parenthesis\n\
      \        \"\\\"\": [1,0,1,1,1,0,1,0,1,0,1,1,1,0,1],             # quote\n  \
      \      \"=\": [1,1,1,0,1,0,1,0,1,0,1,1,1],                  # equals\n     \
      \   \"+\": [1,0,1,1,1,0,1,0,1,1,1,0,1],                  # plus\n        \"\
      @\": [1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1],          # at sign (@)\n      # these[punctuation\
      \ marks are not included in the ITU recommendation,\n      # but a[e found in\
      \ https://en.wikipedia.org/wiki/Morse_code\n        \"!\": [1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1],\
      \      # exclamation point\n        \"&\": [1,0,1,1,1,0,1,0,1,0,1],        \
      \              # ampersand (also prosign for 'WAIT')\n        \";\": [1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1],\
      \          # semicolon\n        \"_\": [1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1],\
      \          # underscore\n        \"$\": [1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1]\
      \           # dollar sign\n          }\n\n    def __init__(self, verbose=True):\n\
      \        gr.sync_block.__init__(self,\n            name = \"Morse code vector\
      \ source\",\n            in_sig = None,\n            out_sig = [np.byte])\n\
      \        self.verbose = verbose\n        self.message_port_register_in(pmt.intern(\"\
      msg_in\"))\n        self.message_port_register_out(pmt.intern(\"clear_input\"\
      ))\n        self.set_msg_handler(pmt.intern(\"msg_in\"), self.handle_msg)\n\
      \        self.data = []\n        self.alphaIn = \"\"\n\n    def handle_msg(self,\
      \ msg):\n        if self.alphaIn:\n            self.alphaIn += \" \"\n     \
      \   self.alphaIn += str(pmt.symbol_to_string(msg)).upper()\n        if self.verbose:\n\
      \            print(\"Sending Morse: %s\" % self.alphaIn)\n    \n    def try_to_flush(self,\
      \ out):\n        # Try to send as many items as we have in buffer\n        len_write\
      \ = min(len(self.data), len(out))\n        out[:len_write] = self.data[:len_write]\n\
      \        self.data = self.data[len_write:]\n        return len_write\n    \n\
      \    def noblock(self, out):\n        len_write = len(out)\n        print(\"\
      noblock(%i)\" % len_write)\n        #if len_write:\n        #    out[:len_write]\
      \ = [0] * len_write\n        return len_write\n\n    def work(self, input_items,\
      \ output_items):\n        _num_elem = 0\n        out = output_items[0]\n   \
      \     if self.data:\n            return self.try_to_flush(out)\n\n        if\
      \ self.alphaIn:\n            for ch in self.alphaIn:\n                # replace\
      \ bad characters with a \"?\"\n                if not ch in self.Morse:\n  \
      \                  ch = \"?\"\n                _dots = self.Morse.get(ch)\n\
      \                if self.verbose:\n                    print(ch, _dots)  # debugging\n\
      \                self.data.extend(_dots)\n                self.data.extend(self.Morse.get(\"\
      ls\"))\n\n            # finish with word space\n            self.data.extend(self.Morse.get(\"\
      ws\"))\n\n            # clear the input and text box\n            self.alphaIn\
      \ = \"\"\n            self.message_port_pub(pmt.intern(\"clear_input\"), pmt.intern(\"\
      \"))\n\n            return self.try_to_flush(out)\n\n        return 0\n    \
      \    #return self.noblock(out)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    verbose: verbose
  states:
    _io_cache: ('Morse code vector source', 'mc_sync_block', [('verbose', 'True')],
      [('msg_in', 'message', 1)], [('0', 'byte', 1), ('clear_input', 'message', 1)],
      '\n    reads input from a message port\n    generates a vector of Morse code
      bits\n    ', ['verbose'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [272, 224.0]
    rotation: 0
    state: true
- name: morse_dpw
  id: parameter
  parameters:
    alias: ''
    comment: '50 - PARIS standard

      60 - CODEX standard'
    hide: none
    label: Dits Per Word
    short_id: ''
    type: intx
    value: '50'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 8.0]
    rotation: 0
    state: true
- name: morse_wpm
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Words Per Minute
    short_id: ''
    type: intx
    value: '13'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 8.0]
    rotation: 0
    state: true
- name: pad_sink_0
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: out
    num_streams: '1'
    optional: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1128, 436.0]
    rotation: 0
    state: true
- name: pad_source_0
  id: pad_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: msg_in
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: '1'
    optional: 'False'
    type: message
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 236.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '16384'
    srate: morse_samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.5'
    tr_mode: qtgui.TRIG_MODE_AUTO
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.5'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [784, 332.0]
    rotation: 0
    state: disabled
- name: qtgui_waterfall_sink_x_0_0
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: morse_samp_rate
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    int_max: '10'
    int_min: '-140'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    type: complex
    update_time: '0.10'
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 332.0]
    rotation: 0
    state: disabled
- name: rf_samp_rate
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: RF Sample Rate
    short_id: ''
    type: eng_float
    value: 1e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 8.0]
    rotation: 0
    state: true
- name: root_raised_cosine_filter_0_0_0
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.35'
    comment: ''
    decim: '1'
    gain: '0.95'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: '200'
    samp_rate: morse_samp_rate
    sym_rate: sym_rate
    type: fir_filter_fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 380.0]
    rotation: 0
    state: true
- name: root_raised_cosine_filter_0_1
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.35'
    comment: ''
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: '200'
    samp_rate: morse_samp_rate
    sym_rate: sym_rate
    type: fir_filter_fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [272, 380.0]
    rotation: 0
    state: true
- name: verbose
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Verbose
    short_id: ''
    type: intx
    value: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 8.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: morse_wrap
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 220.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: morse_wrap
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 420.0]
    rotation: 0
    state: true

connections:
- [blocks_float_to_complex_0_0, '0', blocks_repeat_0_0_0, '0']
- [blocks_float_to_complex_0_0, '0', qtgui_waterfall_sink_x_0_0, '0']
- [blocks_repeat_0_0_0, '0', pad_sink_0, '0']
- [blocks_repeat_0_1, '0', blocks_uchar_to_float_0_0, '0']
- [blocks_uchar_to_float_0_0, '0', virtual_sink_0, '0']
- [epy_block_0_0_0, '0', blocks_repeat_0_1, '0']
- [pad_source_0, out, epy_block_0_0_0, msg_in]
- [root_raised_cosine_filter_0_0_0, '0', blocks_float_to_complex_0_0, '0']
- [root_raised_cosine_filter_0_0_0, '0', qtgui_time_sink_x_0_0, '0']
- [root_raised_cosine_filter_0_1, '0', root_raised_cosine_filter_0_0_0, '0']
- [virtual_source_0, '0', root_raised_cosine_filter_0_1, '0']

metadata:
  file_format: 1
